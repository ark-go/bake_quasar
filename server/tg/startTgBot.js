import { Telegraf } from "telegraf";

const bot = new Telegraf(process.env.TG_botToken);
try {
  bot.start((ctx) => ctx.reply("–ü—Ä–∏–≤–µ—Ç."));
  console.log("–°—Ç–∞—Ä—Ç —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç.");
  bot.help((ctx) => ctx.reply("–°–ø—Ä–∞–≤–æ–∫ –Ω–µ –¥–∞–µ–º."));
  bot.on("sticker", (ctx) => ctx.reply("üëç"));
  bot.hears("hi", (ctx) =>
    ctx.reply("–î–∞, –ø—Ä–∏–≤–µ—Ç " + ctx.chat.first_name + ", –¢–≤–æ–π ID: " + ctx.chat.id)
  );
  bot.launch();
} catch (e) {
  console.log("–û—à–∏–±–∫–∞ —Å—Ç–∞—Ä—Ç–∞ Telegran bot");
  bot = null;
}

export function botSendMessage(message, req) {
  let idBotUser = "";
  let userEmail = req?.session?.user?.email || "?";
  try {
    idBotUser = req?.session?.user?.telegramId;

    if (idBotUser) {
      bot.telegram
        .sendMessage(idBotUser, userEmail + ": " + message) // { disable_notification: true, }
        .then(() => {})
        .catch((e) => {
          console.log("–û—à–∏–±–∫–∞ –±–æ—Ç–∞1", e);
        });
    }
    if (idBotUser != process.env.TG_adminId) {
      bot.telegram
        .sendMessage(process.env.TG_adminId, userEmail + ": " + message)
        .then(() => {})
        .catch((e) => {
          console.log("–û—à–∏–±–∫–∞ –±–æ—Ç–∞2", e);
        });
    }
  } catch (e) {
    console.log("–û—à–∏–±–∫–∞ –±–æ—Ç–∞3", e);
  }
}

export function sendDocument(req, doc) {
  if (req?.session?.user?.telegramId) {
    bot.telegram
      .sendDocument(req.session.user.telegramId, doc)
      .then(() => {})
      .catch((e) => {
        console.log("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞ —Ç–µ–ª–µ–≥—Ä–∞–º", e);
      });
  }
}

export { bot };
